#!/usr/bin/perl
#
# Copyright (c) 1985 Corporation for Research and Educational Networking
# Copyright (c) 1988 University of Illinois Board of Trustees, Steven
#		Dorner, and Paul Pomes
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the Corporation for
#	Research and Educational Networking (CREN), the University of
#	Illinois at Urbana, and their contributors.
# 4. Neither the name of CREN, the University nor the names of their
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE TRUSTEES AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE TRUSTEES OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# @(#)$Id$


if ($ARGV[0] eq "-s")	# grab subject, if any
{
  $sub = $ARGV[1];
  shift; shift;
}

if ($#ARGV<1) {die "usage: splitmail [-s subject] size-in-k user [user2...]\n";}

$size = $ARGV[0];	# max size for pieces, in K

if ($size<=0) {die "usage: splitmail [-s subject] size-in-k user [user2...]\n";}

shift;
$size *= 1024;		
$partnum = 1;		# current part number
$got = 0;		# number of bytes we've read

$recips = join(' ',@ARGV); $#ARGV = -1;
open(STDOUT,qq/|Mail -s "$sub part 1" $recips/) || die;

while (<>)
{
  $len = length($_);
  if ($got + $len > $size)
  {
    print "-- end of part $partnum --\n";
    $partnum++;
    close(STDOUT);
    open(STDOUT,qq/|Mail -s "$sub part $partnum" $recips/) || die;
    $got = 0;
  }
  print;
  $got += $len;
}

print "-- end of file --\n";
close(STDOUT);
exit 0;
